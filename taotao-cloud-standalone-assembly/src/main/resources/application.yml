spring:
  profiles:
    active: @activeProfile@

##Apollo 配置 https://www.apolloconfig.com/#/zh/client/java-sdk-user-guide
# AppId是应用的身份信息，是从服务端获取配置的一个重要信息。
app:
  id: taotao-cloud-standalone
apollo:
  bootstrap:
    #是否开启 Apollo
    enabled: false
    #设置 Namespace2、多个namespace之间用逗号隔开
    namespaces: application.yml
    #3、将Apollo配置加载提到初始化日志系统之前(1.2.0+) （默认false）
    # 使Apollo的加载顺序放到日志系统加载之前，不过这会导致Apollo的启动过程无法通过日志的方式输出
    #将 Apollo 加载提到初始化日志系统之前
    eagerLoad:
      enabled: false
  # 如果是运行jar文件，需要注意格式是java -Denv=YOUR-ENVIRONMENT -jar xxx.jar
  # 属性排序，默认 false
  label: taotao-cloud-standalone
  override-system-properties: false
  #元数据中心地址  Meta server地址也可以填入IP，如http://1.1.1.1:8080,http://2.2.2.2:8080，
  #过生产环境还是建议使用域名（走slb），因为机器扩容、缩容等都可能导致IP列表的变化。
  meta: http://localhost:8080
  #config-service: http://config-service-url:port
  #缓存根目录
  cache-dir: d:\\apollo
  #指定使用哪个集群的配置 集群，默认值 default
  cluster: default
  #连接超时时间，默认 1000（毫秒）
  connectTimeout: 1000
  #刷新时间， 默认 5 （分钟）
  refreshInterval: 5
  #读取时间 默认 5000 （毫秒）
  readTimeout: 5000
  #加载配置 每秒几次，默认 2
  loadConfigQPS: 2
  #	长轮询 每秒几次，默认 2
  longPollQPS: 2
  #Mills 中的长轮询初始延迟 默认 2000（毫秒）
  longPollingInitialDelayInMills: 2000
  # Spring应用通常会使用 Placeholder 来注入配置，如${someKey:someDefaultValue}，冒号前面的是 key，冒号后面的是默认值。
  # #是否开启 Spring 参数自动更新 如果想关闭 placeholder 在运行时自动更新功能，可以设置为 false。
  autoUpdateInjectedSpringProperties: false
  property:
    names:
      cache:
        enable: true
    order:
      enable: true
  access-key:
    #  配置访问秘钥
    secret: fc72a10afa2c40a481cd7ead8951df01

